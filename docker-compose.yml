services:
  mongodb:
    image: mongo:7
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - mongo_data:/data/db
    healthcheck:
      test:
        [
          "CMD",
          "mongosh",
          "--quiet",
          "mongodb://root:example@localhost:27017/admin",
          "--eval",
          "db.runCommand({ ping: 1 })",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    networks: [app-net]

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
      args:
        NODE_VERSION: "22"
        NODE_ENV: ${NODE_ENV}
    image: project-backend:dev
    working_dir: /repo/backend
    command: pnpm dev
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      PORT: ${PORT:-3000}
      JWT_SECRET: ${JWT_SECRET:-change-me-in-shell}
      MONGO_URI: ${MONGO_URI:-mongodb://root:example@mongodb:27017/app?authSource=admin}
      FRONTEND_ORIGIN: ${FRONTEND_ORIGIN:-http://localhost:5173}
      CHOKIDAR_USEPOLLING: "true"
      CHOKIDAR_INTERVAL: "100"
      WATCHPACK_POLLING: "true"
      WATCHPACK_POLLING_INTERVAL: "100"
    ports:
      - "3000:3000"
    volumes:
      - ./backend:/repo/backend:cached
      - ./packages/shared:/repo/packages/shared:cached
      - node_modules_backend:/repo/backend/node_modules
      - node_modules_shared:/repo/packages/shared/node_modules
    depends_on:
      mongodb:
        condition: service_healthy
    restart: unless-stopped
    networks: [app-net]

  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
      args:
        NODE_VERSION: "22"
        NODE_ENV: ${NODE_ENV}
    image: project-frontend:dev
    working_dir: /repo/frontend
    command: pnpm dev --host 0.0.0.0
    environment:
      NODE_ENV: development
      VITE_API_URL: http://localhost:3000
      CHOKIDAR_USEPOLLING: "true"
      CHOKIDAR_INTERVAL: "100"
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/repo/frontend:cached
      - ./packages/shared:/repo/packages/shared:cached
      - node_modules_frontend:/repo/frontend/node_modules
      - node_modules_root:/repo/node_modules
    depends_on:
      - backend
    restart: unless-stopped
    networks: [app-net]

volumes:
  mongo_data:
  node_modules_backend:
  node_modules_shared:
  node_modules_frontend:
  node_modules_root:

networks:
  app-net:
    driver: bridge
